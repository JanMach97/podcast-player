// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Player renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Player
    episode={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="player-left"
        />,
        <div
          className="player-center"
        >
          <p />
          <div
            className="player-controller"
          >
            <i
              className="fas fa-step-backward"
            />
            <i
              className="far fa-play-circle"
              onClick={[Function]}
            />
            <i
              className="fas fa-step-forward"
            />
          </div>
          <div
            className="player-progress"
          >
            <span
              className="currentTime"
            >
              0:00
            </span>
            <div
              className="progress"
              onClick={[Function]}
            >
              <div
                className="progress_filled"
                style={
                  Object {
                    "flexBasis": "",
                  }
                }
              />
            </div>
            <span
              className="duration"
            >
              0:00
            </span>
          </div>
        </div>,
        <div
          className="player-right"
        >
          <i
            className="fas fa-volume-up"
          />
          <input
            max="1"
            min="0"
            name="volume"
            onChange={[Function]}
            step="0.05"
            type="range"
          />
        </div>,
      ],
      "className": "player",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": false,
          "className": "player-left",
        },
        "ref": null,
        "rendered": false,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p />,
            <div
              className="player-controller"
            >
              <i
                className="fas fa-step-backward"
              />
              <i
                className="far fa-play-circle"
                onClick={[Function]}
              />
              <i
                className="fas fa-step-forward"
              />
            </div>,
            <div
              className="player-progress"
            >
              <span
                className="currentTime"
              >
                0:00
              </span>
              <div
                className="progress"
                onClick={[Function]}
              >
                <div
                  className="progress_filled"
                  style={
                    Object {
                      "flexBasis": "",
                    }
                  }
                />
              </div>
              <span
                className="duration"
              >
                0:00
              </span>
            </div>,
          ],
          "className": "player-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="fas fa-step-backward"
                />,
                <i
                  className="far fa-play-circle"
                  onClick={[Function]}
                />,
                <i
                  className="fas fa-step-forward"
                />,
              ],
              "className": "player-controller",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-step-backward",
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "far fa-play-circle",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-step-forward",
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="currentTime"
                >
                  0:00
                </span>,
                <div
                  className="progress"
                  onClick={[Function]}
                >
                  <div
                    className="progress_filled"
                    style={
                      Object {
                        "flexBasis": "",
                      }
                    }
                  />
                </div>,
                <span
                  className="duration"
                >
                  0:00
                </span>,
              ],
              "className": "player-progress",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0:00",
                  "className": "currentTime",
                },
                "ref": null,
                "rendered": "0:00",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="progress_filled"
                    style={
                      Object {
                        "flexBasis": "",
                      }
                    }
                  />,
                  "className": "progress",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "progress_filled",
                    "style": Object {
                      "flexBasis": "",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0:00",
                  "className": "duration",
                },
                "ref": null,
                "rendered": "0:00",
                "type": "span",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fas fa-volume-up"
            />,
            <input
              max="1"
              min="0"
              name="volume"
              onChange={[Function]}
              step="0.05"
              type="range"
            />,
          ],
          "className": "player-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-volume-up",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "max": "1",
              "min": "0",
              "name": "volume",
              "onChange": [Function],
              "step": "0.05",
              "type": "range",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="player-left"
          />,
          <div
            className="player-center"
          >
            <p />
            <div
              className="player-controller"
            >
              <i
                className="fas fa-step-backward"
              />
              <i
                className="far fa-play-circle"
                onClick={[Function]}
              />
              <i
                className="fas fa-step-forward"
              />
            </div>
            <div
              className="player-progress"
            >
              <span
                className="currentTime"
              >
                0:00
              </span>
              <div
                className="progress"
                onClick={[Function]}
              >
                <div
                  className="progress_filled"
                  style={
                    Object {
                      "flexBasis": "",
                    }
                  }
                />
              </div>
              <span
                className="duration"
              >
                0:00
              </span>
            </div>
          </div>,
          <div
            className="player-right"
          >
            <i
              className="fas fa-volume-up"
            />
            <input
              max="1"
              min="0"
              name="volume"
              onChange={[Function]}
              step="0.05"
              type="range"
            />
          </div>,
        ],
        "className": "player",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": false,
            "className": "player-left",
          },
          "ref": null,
          "rendered": false,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p />,
              <div
                className="player-controller"
              >
                <i
                  className="fas fa-step-backward"
                />
                <i
                  className="far fa-play-circle"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-step-forward"
                />
              </div>,
              <div
                className="player-progress"
              >
                <span
                  className="currentTime"
                >
                  0:00
                </span>
                <div
                  className="progress"
                  onClick={[Function]}
                >
                  <div
                    className="progress_filled"
                    style={
                      Object {
                        "flexBasis": "",
                      }
                    }
                  />
                </div>
                <span
                  className="duration"
                >
                  0:00
                </span>
              </div>,
            ],
            "className": "player-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="fas fa-step-backward"
                  />,
                  <i
                    className="far fa-play-circle"
                    onClick={[Function]}
                  />,
                  <i
                    className="fas fa-step-forward"
                  />,
                ],
                "className": "player-controller",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-step-backward",
                    "onClick": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "far fa-play-circle",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-step-forward",
                    "onClick": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="currentTime"
                  >
                    0:00
                  </span>,
                  <div
                    className="progress"
                    onClick={[Function]}
                  >
                    <div
                      className="progress_filled"
                      style={
                        Object {
                          "flexBasis": "",
                        }
                      }
                    />
                  </div>,
                  <span
                    className="duration"
                  >
                    0:00
                  </span>,
                ],
                "className": "player-progress",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0:00",
                    "className": "currentTime",
                  },
                  "ref": null,
                  "rendered": "0:00",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="progress_filled"
                      style={
                        Object {
                          "flexBasis": "",
                        }
                      }
                    />,
                    "className": "progress",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "progress_filled",
                      "style": Object {
                        "flexBasis": "",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0:00",
                    "className": "duration",
                  },
                  "ref": null,
                  "rendered": "0:00",
                  "type": "span",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fas fa-volume-up"
              />,
              <input
                max="1"
                min="0"
                name="volume"
                onChange={[Function]}
                step="0.05"
                type="range"
              />,
            ],
            "className": "player-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-volume-up",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "max": "1",
                "min": "0",
                "name": "volume",
                "onChange": [Function],
                "step": "0.05",
                "type": "range",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
